// Generated by BUCKLESCRIPT, PLEASE EDIT WITH CARE

import * as Curry from "bs-platform/lib/es6/curry.js";
import * as React from "react";
import * as Belt_Array from "bs-platform/lib/es6/belt_Array.js";
import * as T$Codenames from "./T.bs.js";
import * as Board$Codenames from "./Board.bs.js";
import * as Header$Codenames from "./Header.bs.js";
import * as SocketIoClient from "socket.io-client";

var defaultState = {
  blueScore: 8,
  redScore: 9,
  showAll: false,
  channel: "fun-fridays",
  firstTurn: "blue",
  tiles: T$Codenames.tiles
};

function GameView(Props) {
  var id = Props.id;
  React.useEffect((function () {
          var socket = new SocketIoClient.default("http://localhost:8080");
          socket.on("connect", (function (param) {
                  console.log("connected");
                  socket.emit("joinGame", id);
                  return /* () */0;
                }));
          socket.on("joinGame", (function (words) {
                  console.log("joinGame", words);
                  return /* () */0;
                }));
          return ;
        }), ([]));
  var match = React.useReducer((function (state, action) {
          if (action) {
            var word = action[0];
            var tiles = Belt_Array.map(state.tiles, (function (t) {
                    if (t.word === word) {
                      return {
                              word: t.word,
                              selected: true,
                              color: t.color
                            };
                    } else {
                      return t;
                    }
                  }));
            return {
                    blueScore: state.blueScore,
                    redScore: state.redScore,
                    showAll: state.showAll,
                    channel: state.channel,
                    firstTurn: state.firstTurn,
                    tiles: tiles
                  };
          } else {
            return {
                    blueScore: state.blueScore,
                    redScore: state.redScore,
                    showAll: !state.showAll,
                    channel: state.channel,
                    firstTurn: state.firstTurn,
                    tiles: state.tiles
                  };
          }
        }), defaultState);
  var dispatch = match[1];
  var state = match[0];
  var onClickTile = function (word) {
    return Curry._1(dispatch, /* SelectCard */[word]);
  };
  var onToggleSpymaster = function (param) {
    return Curry._1(dispatch, /* Spymaster */0);
  };
  return React.createElement("div", {
              className: "flex flex-col h-screen mx-auto max-w-screen-xl"
            }, React.createElement("div", {
                  className: "mb-2"
                }, React.createElement(Header$Codenames.make, {
                      blueScore: state.blueScore,
                      redScore: state.redScore,
                      onClickNewGame: (function (param) {
                          console.log("hi");
                          return /* () */0;
                        }),
                      onToggleSpymaster: onToggleSpymaster
                    })), React.createElement(Board$Codenames.make, {
                  showAll: state.showAll,
                  tiles: state.tiles,
                  onClick: onClickTile
                }));
}

var make = GameView;

export {
  defaultState ,
  make ,
  
}
/* react Not a pure module */
